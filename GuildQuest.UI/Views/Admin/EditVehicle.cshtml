@model GuildQuest.UI.Models.Vehicle

@{
    ViewBag.Title = "Edit";

    var imgSource = @Url.Content("~/Content/Images/" + @Model.VINumber + ".jpg");
    var imgAlt    = @Url.Content("~/Content/Images/540x360.png");
    var tmpSource = @Url.Content("~/Content/Images/Temp_" + @Model.VINumber + ".jpg");

}

<h2>Edit Vehicle</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
 
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.VehicleID)
        <div class="row">
            <div class="form-group col">
                @Html.LabelFor(model => model.MakeModelID, "MakeModelID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("MakeModelID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MakeModelID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col">
                @Html.LabelFor(model => model.BodyStyleID, "BodyStyleID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("BodyStyleID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BodyStyleID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col">
                @Html.LabelFor(model => model.TransmissionTypeID, "TransmissionTypeID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("TransmissionTypeID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TransmissionTypeID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col">
                @Html.LabelFor(model => model.InteriorColorID, "InteriorColorID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("InteriorColorID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.InteriorColorID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col">
                @Html.LabelFor(model => model.ExteriorColorID, "ExteriorColorID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ExteriorColorID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ExteriorColorID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col">
                @Html.LabelFor(model => model.Mileage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Mileage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Mileage, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">

            <div class="form-group col">
                @Html.LabelFor(model => model.VINumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VINumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VINumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col">
                @Html.LabelFor(model => model.SalesPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SalesPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SalesPrice, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col">
                @Html.LabelFor(model => model.MSRPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MSRPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MSRPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col">
                @Html.LabelFor(model => model.Sold, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Sold)
                        @Html.ValidationMessageFor(model => model.Sold, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col">
                @Html.LabelFor(model => model.Featured, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Featured)
                        @Html.ValidationMessageFor(model => model.Featured, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group col">
                @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>  
        <div class="row">   
            <div class="col-md-3">
                <img class="img-fluid img-thumbnail" src=@imgSource alt=@imgAlt>  
            </div>
        </div>  
        <div class="row">
            <div class="form-group col">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                  <input type="file" id="fileupload"/>
                </div>
            </div>
        </div> 
        <div class="row justify-content-start">
            @Html.ActionLink(
                linkText: "Delete",
                actionName: "DeleteVehicle",
                controllerName: "Admin",
                routeValues: new
                {
                    id = @Model.VehicleID

                },
                htmlAttributes: new
                {
                    @class = "btn btn-danger hm-blue-light red "
                }
                )
            @Html.ActionLink(
                linkText: "Save",
                actionName: "EditVehicle",
                controllerName: "Admin",
                routeValues: new
                {
                    id = @Model.VehicleID

                },
                htmlAttributes: new
                {
                    @class = "btn btn-primary hm-green-light  "
                }
                )
        </div>
    </div>
}

<div>
  
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
